/*
 * JXGraphDemo.java
 *
 * Created on 16 mars 2006, 13:56
 */

package org.jdesktop.swingx.demo;

import java.awt.Color;
import java.awt.Component;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JColorChooser;
import javax.swing.JList;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jdesktop.swingx.JXGraph;
import org.nfunk.jep.JEP;

/**
 *
 * @author  gfx
 */
public class JXGraphDemo extends javax.swing.JFrame {
    
    private DefaultListModel model;
    private Color defaultColor;
    
    /** Creates new form JXGraphDemo */
    public JXGraphDemo() {
        initComponents();
        defaultColor = expressionTextField.getBackground();
        model = new DefaultListModel();
        plotsList.setModel(model);
        plotsList.setCellRenderer(new ColoredPlotRenderer());
        setLocationRelativeTo(null);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JLabel jLabel1;
        javax.swing.JScrollPane jScrollPane1;
        org.jdesktop.swingx.JXTitledSeparator jXTitledSeparator1;

        graph = new org.jdesktop.swingx.JXGraph();
        jLabel1 = new javax.swing.JLabel();
        expressionTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jXTitledSeparator1 = new org.jdesktop.swingx.JXTitledSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        plotsList = new org.jdesktop.swingx.JXList();
        removeButton = new javax.swing.JButton();
        colorButton = new org.jdesktop.swingx.demo.ColorButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JGraph Demo");
        graph.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        graph.setMinorCountX(3);
        graph.setMinorCountY(3);
        graph.setView(new java.awt.geom.Rectangle2D.Double(-1.1, -1.1, 2.2, 2.2));
        org.jdesktop.layout.GroupLayout graphLayout = new org.jdesktop.layout.GroupLayout(graph);
        graph.setLayout(graphLayout);
        graphLayout.setHorizontalGroup(
            graphLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 396, Short.MAX_VALUE)
        );
        graphLayout.setVerticalGroup(
            graphLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 392, Short.MAX_VALUE)
        );

        jLabel1.setText("y = ");

        expressionTextField.setText("cos(x * 3)");
        expressionTextField.getDocument().addDocumentListener(new ExpressionValidator());

        addButton.setMnemonic('A');
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlot(evt);
            }
        });

        jXTitledSeparator1.setTitle("Current Plots");

        plotsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(plotsList);

        removeButton.setMnemonic('R');
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlot(evt);
            }
        });

        colorButton.setBackground(new java.awt.Color(153, 153, 255));
        colorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                choosePlotColor(evt);
            }
        });

        org.jdesktop.layout.GroupLayout colorButtonLayout = new org.jdesktop.layout.GroupLayout(colorButton);
        colorButton.setLayout(colorButtonLayout);
        colorButtonLayout.setHorizontalGroup(
            colorButtonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 67, Short.MAX_VALUE)
        );
        colorButtonLayout.setVerticalGroup(
            colorButtonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 19, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(expressionTextField)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(colorButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(addButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(graph, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jXTitledSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 177, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(removeButton)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 177, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {addButton, removeButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jXTitledSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
                    .add(graph, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(expressionTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel1)
                        .add(addButton)
                        .add(removeButton))
                    .add(colorButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {addButton, removeButton}, org.jdesktop.layout.GroupLayout.VERTICAL);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removePlot(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlot
        ColoredPlot plot = (ColoredPlot) plotsList.getSelectedValue();
        if (plot == null) {
            return;
        }
        graph.removePlots(plot.getPlot());
        model.removeElement(plot);
    }//GEN-LAST:event_removePlot

    private void addPlot(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlot
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                ExpressionPlot plot = new ExpressionPlot(expressionTextField.getText());
                graph.addPlots(colorButton.getBackground(), plot);
                model.addElement(new ColoredPlot(colorButton.getBackground(),
                    plot, expressionTextField.getText()));                
            }
        });
    }//GEN-LAST:event_addPlot

    private void choosePlotColor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_choosePlotColor
        ColorButton button = (ColorButton) evt.getSource();
        Color color = JColorChooser.showDialog(this, "Plot Color",
            button.getBackground());
        button.setBackground(color);
    }//GEN-LAST:event_choosePlotColor
    
    private class ExpressionValidator implements DocumentListener {
        private void validate() {
            JEP parser = new JEP();
            parser.addStandardConstants();
            parser.addStandardFunctions();
            parser.addVariable("x", graph.getOrigin().getX());
            parser.parseExpression(expressionTextField.getText());
            if (parser.hasError()) {
                expressionTextField.setToolTipText(parser.getErrorInfo());
                expressionTextField.setBackground(new Color(255, 204, 204));
            } else {
                expressionTextField.setBackground(defaultColor);
            }
        }
        
        public void changedUpdate(DocumentEvent e) {
            validate();
        }
        
        public void insertUpdate(DocumentEvent e) {
            validate();
        }
        
        public void removeUpdate(DocumentEvent e) {
            validate();
        }
    }
    
    private static class ColoredPlot {
        private final Color color;
        private final JXGraph.Plot plot;
        private final String expression;
        
        private ColoredPlot(Color color, JXGraph.Plot plot, String expression) {
            this.color = color;
            this.plot = plot;
            this.expression = expression;
        }
        
        private Color getColor() {
            return color;
        }
        
        private JXGraph.Plot getPlot() {
            return plot;
        }
        
        @Override
        public String toString() {
            return "y=" + expression;
        }
    }
    
    private class ColoredPlotRenderer extends DefaultListCellRenderer {
        public Component getListCellRendererComponent(JList list, Object value,
            int index, boolean isSelected, boolean cellHasFocus) {
            Component retValue;
            retValue = super.getListCellRendererComponent(list, value, index,
                isSelected, cellHasFocus);
            if (isSelected) {
                retValue.setBackground(((ColoredPlot) value).getColor());
                retValue.setForeground(Color.WHITE);
            }
            return retValue;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (Exception e) {
                }
                new JXGraphDemo().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private org.jdesktop.swingx.demo.ColorButton colorButton;
    private javax.swing.JTextField expressionTextField;
    private org.jdesktop.swingx.JXGraph graph;
    private org.jdesktop.swingx.JXList plotsList;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables
    
}
